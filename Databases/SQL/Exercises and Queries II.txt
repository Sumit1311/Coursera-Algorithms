/* Delete the tables if they already exist */
drop table if exists Highschooler;
drop table if exists Friend;
drop table if exists Likes;

/* Create the schema for our tables */
create table Highschooler(ID int, name text, grade int);
create table Friend(ID1 int, ID2 int);
create table Likes(ID1 int, ID2 int);

/* Populate the tables with our data */
insert into Highschooler values (1510, 'Jordan', 9);
insert into Highschooler values (1689, 'Gabriel', 9);
insert into Highschooler values (1381, 'Tiffany', 9);
insert into Highschooler values (1709, 'Cassandra', 9);
insert into Highschooler values (1101, 'Haley', 10);
insert into Highschooler values (1782, 'Andrew', 10);
insert into Highschooler values (1468, 'Kris', 10);
insert into Highschooler values (1641, 'Brittany', 10);
insert into Highschooler values (1247, 'Alexis', 11);
insert into Highschooler values (1316, 'Austin', 11);
insert into Highschooler values (1911, 'Gabriel', 11);
insert into Highschooler values (1501, 'Jessica', 11);
insert into Highschooler values (1304, 'Jordan', 12);
insert into Highschooler values (1025, 'John', 12);
insert into Highschooler values (1934, 'Kyle', 12);
insert into Highschooler values (1661, 'Logan', 12);

insert into Friend values (1510, 1381);
insert into Friend values (1510, 1689);
insert into Friend values (1689, 1709);
insert into Friend values (1381, 1247);
insert into Friend values (1709, 1247);
insert into Friend values (1689, 1782);
insert into Friend values (1782, 1468);
insert into Friend values (1782, 1316);
insert into Friend values (1782, 1304);
insert into Friend values (1468, 1101);
insert into Friend values (1468, 1641);
insert into Friend values (1101, 1641);
insert into Friend values (1247, 1911);
insert into Friend values (1247, 1501);
insert into Friend values (1911, 1501);
insert into Friend values (1501, 1934);
insert into Friend values (1316, 1934);
insert into Friend values (1934, 1304);
insert into Friend values (1304, 1661);
insert into Friend values (1661, 1025);
insert into Friend select ID2, ID1 from Friend;

insert into Likes values(1689, 1709);
insert into Likes values(1709, 1689);
insert into Likes values(1782, 1709);
insert into Likes values(1911, 1247);
insert into Likes values(1247, 1468);
insert into Likes values(1641, 1468);
insert into Likes values(1316, 1304);
insert into Likes values(1501, 1934);
insert into Likes values(1934, 1501);
insert into Likes values(1025, 1101);

1. Find the names of all students who are friends with someone named Gabriel. 
	select first.name
	from (select distinct name, ID2
	from friend inner join highschooler
	on ID = ID1) first
	inner join highschooler
	on ID2 = ID
	where highschooler.name='Gabriel';

2. For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. 
	select first.name, first.grade, second.name, second.grade
	from (select distinct name, grade, ID2
	from likes inner join highschooler
	on ID = ID1) first
	inner join highschooler as second
	on ID2 = ID
	where first.grade - second.grade >= 2

* 3. For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order. 
		select first_name, first_grade,name as second_name, grade as second_grade
		from ((select id, name as first_name, grade as first_grade,id2
			from ((select id1,id2
				from likes l1
				where id2 
				in (select id1
					from likes
					where id2 = l1.id1)) l1 
					inner join highschooler
					on id1=id)) m inner join highschooler
									on m.id2=highschooler.id) as m1
		where first_name < name

* 4. Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade.

	select *
	from (select name,grade
	from highschooler
	except
	select first.name, first.grade
	from (select distinct name, id1, grade, ID2
	from friend inner join highschooler
	on ID = ID1) first
	inner join highschooler as second
	on ID2 = ID
	where first.grade != second.grade) m
	order by grade,name

5. Find the name and grade of all students who are liked by more than one other student.
	select name,grade
	from (select id2
	from likes
	group by id2
	having count(id1) >= 2) m inner join highschooler
	on m.id2=id